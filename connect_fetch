import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

/**
 * Objective: Connects to a MySQL database, executes a SELECT query, and 
 * retrieves data from the 'Employee' table using Java JDBC.
 * * NOTE: This program requires the MySQL Connector/J driver to be in the 
 * classpath (e.g., added as a dependency or an external JAR file).
 */
public class JdbcMySQLExample {

    // --- JDBC Connection Details ---
    // IMPORTANT: Replace these placeholders with your actual MySQL credentials and database name.
    private static final String JDBC_DRIVER = "com.mysql.cj.jdbc.Driver"; // Driver class for MySQL 8+
    private static final String DB_URL = "jdbc:mysql://localhost:3306/your_database_name";
    private static final String USER = "your_username";
    private static final String PASS = "your_password";
    
    // --- SQL Query ---
    private static final String SELECT_QUERY = "SELECT EmpID, Name, Salary FROM Employee";

    public static void main(String[] args) {
        
        // 1. Load the JDBC Driver (Optional for modern JDBC but good practice for clarity)
        try {
            Class.forName(JDBC_DRIVER);
        } catch (ClassNotFoundException e) {
            System.err.println("ERROR: MySQL JDBC Driver not found. Ensure the connector JAR is in your classpath.");
            e.printStackTrace();
            return;
        }

        System.out.println("Connecting to database...");

        // 2. Establish Connection and Execute Query using Try-with-Resources
        // Connection, Statement, and ResultSet are automatically closed at the end of the try block.
        try (
            Connection conn = DriverManager.getConnection(DB_URL, USER, PASS);
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(SELECT_QUERY)
        ) {
            System.out.println("Connection successful. Executing query: " + SELECT_QUERY);
            
            // Display header
            System.out.println("\n---------------------------------------------------------");
            System.out.printf("%-10s | %-20s | %-10s\n", "Employee ID", "Name", "Salary");
            System.out.println("---------------------------------------------------------");

            // 3. Process the results
            boolean resultsFound = false;
            while (rs.next()) {
                resultsFound = true;
                // Retrieve data by column name
                int id = rs.getInt("EmpID");
                String name = rs.getString("Name");
                double salary = rs.getDouble("Salary");

                // Display the record
                System.out.printf("%-10d | %-20s | $%-9.2f\n", id, name, salary);
            }
            
            if (!resultsFound) {
                System.out.println("No employee records found in the table.");
            }
            
            System.out.println("---------------------------------------------------------");

        } catch (SQLException e) {
            // Handle common database errors (e.g., connection failed, query syntax error)
            System.err.println("\nDatabase Error Occurred:");
            System.err.println("SQL State: " + e.getSQLState());
            System.err.println("Error Code: " + e.getErrorCode());
            e.printStackTrace();
        }
    }
}
